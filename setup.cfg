# This file is used to configure your project.
# Read more about the various options under:
# https://setuptools.pypa.io/en/latest/userguide/declarative_config.html
# https://setuptools.pypa.io/en/latest/references/keywords.html

[metadata]
description = SPatial Analysis for CodEX data (SPACEc)
name = SPACEc
author = yuqiyuqitan
author_email = tanyuqi527@gmail.com
license = MIT
license_files = LICENSE.txt
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8; variant=GFM
url = https://github.com/yuqiyuqitan/SPACEc
# Add here related links, for example:
project_urls =
    Documentation = https://spacec.readthedocs.io/
    Source = https://github.com/yuqiyuqitan/SPACEc
#    Changelog = https://pyscaffold.org/en/latest/changelog.html
    Tracker = https://github.com/yuqiyuqitan/SPACEc/issues
#    Conda-Forge = https://anaconda.org/conda-forge/pyscaffold
#    Download = https://pypi.org/project/PyScaffold/#files
#    Twitter = https://twitter.com/PyScaffold

# Change if running only on Windows, Mac or Linux (comma-separated)
platforms = any

# Add here all kinds of additional classifiers as defined under
# https://pypi.org/classifiers/
classifiers =
    Development Status :: 4 - Beta
    Programming Language :: Python


[options]
zip_safe = False
packages = find_namespace:
include_package_data = True
package_dir =
    =src

# Add here links from where the project can find additional dependencies
# e.g. links to your internal index, to a specific repository or to a specific
# version control commit.
# dependency_links =

# Require a min/specific Python version (comma-separated conditions)
python_requires = >=3.9,<3.11

# Add here dependencies of your project (line-separated), e.g. requests>=2.2,<3.0.
# Version specifiers like >=2.2,<3.0 avoid problems due to API changes in
# new major versions. This works if the required packages follow Semantic Versioning.
# For more information, check out https://semver.org/.
install_requires =
    importlib-metadata; python_version<"3.8"
    tqdm
    joblib
    pandas
    yellowbrick
    statsmodels
    scikit-learn
    scikit-image
    # TODO: remove version when we find the bug (what bug?)
    # scanpy==1.9.6
    scanpy
    networkx
    tensorly
    # TODO: Version only required on Apple M chips as far as I can tell at the moment
    cellpose==3.0.11
    torch<2.6
    concave_hull
    pyFlowSOM
    TissUUmaps==3.1.1.6
    # MAYBE NOT NEEDED? Can't find reference
    # but might help with some downstream dependencies
    Flask==2.0.0
    # TODO: Double check why we need this version and mention it here.
    Werkzeug==2.3.8
    GitPython               # for downloading STELLAR from Git repo
    # MAYBE NOT NEEDED? As it seems to be an outdated dependency
    # as igraph should be used according to PyPi:
    # https://pypi.org/project/python-igraph/
    # python-igraph
    # TODO: Do we need this particular version? If yes, why?
    # igraph==0.9.10
    igraph
    # CAN WE REMOVE THE SYSTEM SPECS NOW?
    leidenalg; sys_platform != "darwin" or platform_machine != "arm64"
    louvain; sys_platform != "darwin" or platform_machine != "arm64"
    # MAYBE NOT NEEDED? Super old version ... is `louvain` enough?
    python-louvain==0.1
    matplotlib==3.9
    panel
    # MAYBE NOT NEEDED? Never imported anywhere ...
    watchfiles
    networkx<3.4
    pyvips
    openslide-python
    # Needs to be installed by hand on Mac because it requires `tensorflow`
    # but we need to install `tensorflow-macos` and optionally `tensorflow-metal`.
    deepcell; sys_platform != "darwin" or platform_machine != "arm64"
    geopandas
    shapely
    descartes


[options.packages.find]
where = src
exclude =
    tests


[options.extras_require]
# Add here additional requirements for extra features, to install with:
# `pip install spacec[PDF]` like:
# PDF = ReportLab; RXP
rapids =
    rapids-singlecell[rapids11]
stellar =
    torch==1.12.0+cu113
    torchvision==0.13.0+cu113
    torchaudio==0.12.0+cu113
    torch-scatter==2.1.0
    torch-sparse==0.6.16
    torch-cluster==1.6.0
    torch-spline-conv==1.2.1
    torch-geometric==2.2.0

# Add here test requirements (semicolon/line-separated)
testing =
    setuptools
    pytest
    pytest-cov
    # disabling extra tests since I can't make them work on Github Actions
    # torch @ https://download.pytorch.org/whl/cpu/torch-2.3.0%%2Bcpu-cp39-cp39-linux_x86_64.whl ; sys_platform == 'linux'
    # torch @ https://download.pytorch.org/whl/cpu/torch-2.3.0%%2Bcpu-cp38-cp38-win_amd64.whl ; sys_platform == 'win32'
    # torch_geometric
    # torch_sparse
    # pyg-lib @ https://data.pyg.org/whl/torch-2.3.0%%2Bcpu/pyg_lib-0.4.0%%2Bpt23cpu-cp39-cp39-linux_x86_64.whl ; sys_platform == 'linux'
    # pyg-lib @ https://data.pyg.org/whl/torch-2.3.0%%2Bcpu/pyg_lib-0.4.0%%2Bpt23cpu-cp39-cp39-win_amd64.whl ; sys_platform == 'win32'

[options.entry_points]
# Add here console scripts like:
# console_scripts =
#     script_name = spacec.module:function
# For example:
# console_scripts =
#     fibonacci = spacec.skeleton:run
# And any other entry points, for example:
# pyscaffold.cli =
#     awesome = pyscaffoldext.awesome.extension:AwesomeExtension

[tool:pytest]
# Specify command line options as you would do when invoking pytest directly.
# e.g. --cov-report html (or xml) for html/xml output or --junitxml junit.xml
# in order to write a coverage file that can be read by Jenkins.
# CAUTION: --cov flags may prohibit setting breakpoints while debugging.
#          Comment those flags to avoid this pytest issue.
addopts =
    --cov spacec --cov-report term-missing
    --verbose
    -m "not slow and not skip and not gpu"
norecursedirs =
    dist
    build
    .tox
testpaths = tests
# Use pytest markers to select/deselect specific tests
markers =
    slow: mark tests as slow (run with '-m slow')
    skip: mark tests to be skipped (run with '-m skip')
    gpu:  mark tests that require GPUs (run with '-m gpu')
#     system: mark end-to-end system tests

[devpi:upload]
# Options for the devpi: PyPI server and packaging tool
# VCS export must be deactivated since we are using setuptools-scm
no_vcs = 1
formats = bdist_wheel

[flake8]
# Some sane defaults for the code style checker flake8
max_line_length = 88
extend_ignore = E203, W503
# ^  Black-compatible
#    E203 and W503 have edge cases handled by black
exclude =
    .tox
    build
    dist
    .eggs
    docs/conf.py

[pyscaffold]
# PyScaffold's parameters when the project was created.
# This will be used when updating. Do not change!
version = 4.5
package = spacec
extensions =
    github_actions
    markdown
    pre_commit
